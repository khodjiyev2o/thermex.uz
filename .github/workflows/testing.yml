name: CI/CD
run-name: ${{ github.actor }} is testing the thermex.uz üöÄ
on:
  push:
jobs:
  testing:
      runs-on: ubuntu-latest
      container: python:3.9
      services:
        db:
          image: postgres
          env:
            POSTGRES_PASSWORD: password
            POSTGRES_USER: sammy
            POSTGRES_DB: postgres
          options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5

      steps:
        - name: Check out repository code
          uses: actions/checkout@v3
        - name: Cache dependencies
          uses: actions/setup-python@v4
          with:
            cache: 'pip'
        - name: Install dependencies
          run: pip install -r requirements/dev.txt
        - name: Install gettext
          run: apt-get update && apt-get install -y gettext
        - name: Create env file
          run: |  
            echo "${{ secrets.ENV_FILE }}" >> .env
        - name: Compile messages
          run: python3 manage.py compilemessages
        - name: Run Tests
          run: python3 manage.py test
        - name: Run Linter
          run: make lint

  deploy:
    runs-on: ubuntu-latest
    needs: testing
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: SSH into server and deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_IP_ADDRESS }}
        username: root
        password: ${{ secrets.SERVER_PASSWORD }}
        port: 22
        script: |
          cd ~/thermex.uz
          docker-compose down
          docker container prune -f
          docker image prune -f
          docker-compose up -d --build
    - name: Job Status
      run: echo "üçè Deployment status is ${{ job.status }}."