name: CI/CD
run-name: ${{ github.actor }} is testing the thermex.uz üöÄ
on:
  push:
jobs:
  testing:
      runs-on: ubuntu-latest
      container: python:3.9
      services:
        db:
          image: postgres
          env:
            POSTGRES_PASSWORD: password
            POSTGRES_USER: sammy
            POSTGRES_DB: postgres
          options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5

      steps:
        - name: Check out repository code
          uses: actions/checkout@v3
        - name: Cache dependencies
          uses: actions/cache@v2
          with:
            path: ~/.cache/pip
            key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements/dev.txt') }}
        - name: Install dependencies
          run: pip install -r requirements/dev.txt
        - name: Install gettext
          run: apt-get update && apt-get install -y gettext
        - name: Create env file
          run: |
            echo "${{ secrets.ENV_FILE }}" >> .env
        - name: Compile messages
          run: python3 manage.py compilemessages
        - name: Run Tests
          run: python3 manage.py test
        - name: Run Linter
          run: make lint

  deploy:
    runs-on: ubuntu-latest
    needs: testing
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: SSH into EC2
        uses: appleboy/ssh-action@master
        with:
          #host: ${{ secrets.EC2_INSTANCE_IP }}
          host: 18.228.10.255
          username: ec2-user
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/thermex.uz
            git pull origin main
            docker-compose down 
            docker-compose up -d --build
            docker container prune --noinput
            docker image prune --noinput
      - name: Job Status
        run: echo "üçè Deployment status is ${{ job.status }}."