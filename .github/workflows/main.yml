name: CI/CD
run-name: ${{ github.actor }} is testing the thermex.uz ðŸš€
on:
  pull_request:
    branches: [main]
jobs:
#  testing:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Cloning repo
#        uses: actions/checkout@v3
#      - name: Install Dependencies
#        run : pip install -r requirements/dev.txt
#      - name: Create env file
#        run: |
#              echo "${{ secrets.ENV_FILE }}" >> .env
#      - name: Run Migrations
#        run: python3 manage.py migrate
#      - name: Run Tests
#        run: python3 manage.py test
  container-job:
      # Containers must run in Linux based operating systems
      runs-on: ubuntu-latest
      # Docker Hub image that `container-job` executes in
      container: python:3.9

      # Service containers to run with `container-job`
      services:
        # Label used to access the service container
        db:
          # Docker Hub image
          image: postgres
          # Provide the password for postgres
          env:
            POSTGRES_PASSWORD: password
            POSTGRES_USER: sammy
            POSTGRES_DB: postgres
          # Set health checks to wait until postgres has started
          options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5

      steps:
        # Downloads a copy of the code in your repository before running CI tests
        - name: Check out repository code
          uses: actions/checkout@v3

        # Performs a clean installation of all dependencies in the `package.json` file
        # For more information, see https://docs.npmjs.com/cli/ci.html
        - name: Install dependencies
          run: pip install -r requirements/dev.txt
        - name: Install gettext
          run: apt-get update && apt-get install -y gettext
        - name: Create env file
          run: |
            echo "${{ secrets.ENV_FILE }}" >> .env
        - name: Connect to PostgreSQL
          # Runs a script that creates a PostgreSQL table, populates
          # the table with data, and then retrieves the data.
          run: python3 manage.py migrate
        - name: Compile messages
          run: python3 manage.py compilemessages
        - name: Run Tests
          run: python3 manage.py test