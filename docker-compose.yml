version: '3'
services:
  db:
    platform: linux/amd64
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    restart: always
    ports:
      - "5432:5432"
    container_name: thermex_db
  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    #command: gunicorn config.wsgi:application --bind 0.0.0.0:8000 --reload
    restart: always
    env_file:
      - .env
    volumes:
      - .:/usr/src/app
      - static_volume:/usr/src/app/staticfiles
      - media_volume:/usr/src/app/media
    expose:
      - 8000
    depends_on:
      - db
    container_name: thermex
  nginx-proxy:
    container_name: nginx-proxy
    build: ./nginx
    restart: always
    ports:
      - 443:443
      - 80:80
    volumes:
      - static_volume:/usr/src/app/staticfiles
      - media_volume:/usr/src/app/media
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - web
  nginx-proxy-letsencrypt:
      image: jrcs/letsencrypt-nginx-proxy-companion
      env_file:
        - .env
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock:ro
        - certs:/etc/nginx/certs
        - html:/usr/share/nginx/html
        - vhost:/etc/nginx/vhost.d
        - acme:/etc/acme.sh
      depends_on:
        - nginx-proxy

volumes:
  postgres_data:
  static_volume:
  media_volume:
  certs:
  html:
  vhost:
  acme:
